generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  clerkId   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  exams    Exam[]
  attempts Attempt[]
}

model Exam {
  id        String       @id @default(uuid())
  type      ExamType     @default(Academic)
  year      Int
  month     Int
  createdAt DateTime     @default(now())
  modules   ExamModule[]
  questions Question[]
  attempts  Attempt[]
  User      User?        @relation(fields: [userId], references: [id])
  userId    String?
}

model ExamModule {
  id     String @id @default(uuid())
  exam   Exam   @relation(fields: [examId], references: [id])
  examId String
  module Module
}

model Question {
  id        String   @id @default(uuid())
  examId    String
  exam      Exam     @relation(fields: [examId], references: [id])
  module    Module
  content   Json
  answers   Json
  createdAt DateTime @default(now())
}

model Attempt {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  examId      String
  exam        Exam      @relation(fields: [examId], references: [id])
  module      Module
  responses   Json
  score       Float?
  completedAt DateTime?
}

enum ExamType {
  Academic
  General
}

enum Module {
  Listening
  Reading
  Writing
  Speaking
}
